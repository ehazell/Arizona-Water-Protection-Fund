<?php

/**
 * Configures existing fields and deletes non-needed fields
 */
function feature_basic_content_update_7010() {

  foreach (field_info_fields() as $key => $field) {
    if ($field['type'] == 'menu_block_placement_reference') {
      foreach ($field['bundles']['node'] as $node_type) {
        $instance = field_info_instance('node', $key, $node_type);
        if ($instance['widget']['module'] != 'menu_block_placement') {
          $instance['widget']['module'] = 'menu_block_placement';
          $instance['widget']['type'] = 'menu_block_placement_widget';
          field_update_instance($instance);
        }
      }
      if ($key != 'field_basic_block_block_sections') {
        $field['settings']['default_selects'] = array(
          'region' => 0,
          'individ' => 0,
        );
        field_update_field($field);
      }
    }
  }
  $query = db_select('field_data_field_basic_block_block_sections', 'f')
    ->fields('f')
    ->execute();
  $field_data = array();
  while ($row = $query->fetchAssoc()) {
    $field_data[] = $row;
  }
  db_truncate('field_data_field_basic_block_block_sections')->execute();
  db_truncate('field_revision_field_basic_block_block_sections')->execute();

  $field = field_info_field('field_basic_block_block_sections');
  $field['settings']['default_selects'] = array(
    'region' => 'region',
    'individ' => 'individ',
  );
  field_update_field($field);
  foreach ($field_data as $row) {
    db_insert('field_data_field_basic_block_block_sections')
      ->fields($row)
      ->execute();
  }

  $query = db_select('field_data_field_basic_block_block_sections', 'f')
    ->fields('f', array('entity_id', 'delta'))
    ->orderBy('delta', 'desc')
    ->groupBy('entity_id')
    ->execute();
  while ($nid = $query->fetchField()) {
    $region = db_select('field_data_field_basic_block_region', 'r')
      ->fields('r', array('field_basic_block_region_value'))
      ->condition('entity_id', $nid)
      ->execute()
      ->fetchField();
    switch ($region) {
      case 'preface':
        $region = 'preface_first';
        break;
      case 'left':
        $region = 'sidebar_first';
        break;
      case 'right':
        $region = 'sidebar_second';
        break;
      case 'postscript':
        $region = 'postscript_first';
        break;
    }
    $individ = db_select('field_data_field_basic_individual_page', 'i')
      ->fields('i', array('field_basic_individual_page_value'))
      ->condition('entity_id', $nid)
      ->execute()
      ->fetchField();
    db_update('field_data_field_basic_block_block_sections')
      ->condition('entity_id', $nid)
      ->fields(array(
        'field_basic_block_block_sections_region' => $region,
        'field_basic_block_block_sections_individual_pages' => $individ
      ))
      ->execute();
  }


  $front = db_select('menu_links', 'm')
    ->fields('m', array('mlid'))
    ->condition('link_path', '<front>')
    ->condition('menu_name', 'main-menu')
    ->execute()
    ->fetchAssoc();
  $front_mlid = $front['mlid'];

  $query = db_select('field_data_field_basic_block_front_page', 'f')
    ->condition('field_basic_block_front_page_value', '1')
    ->fields('f', array('entity_id'))
    ->execute();
  while ($entity_id = $query->fetchField()) {
    $front = db_select('field_data_field_basic_block_block_sections', 's1')
      ->condition('field_basic_block_block_sections_mlid', $front_mlid)
      ->condition('entity_id', $entity_id)
      ->fields('s1')
      ->execute()
      ->fetchAssoc();

    if (empty($front)) {
      $new_row = db_select('field_data_field_basic_block_block_sections', 's2')
        ->condition('entity_id', $entity_id)
        ->fields('s2')
        ->orderBy('delta', 'desc')
        ->execute()
        ->fetchAssoc();
      $new_row['field_basic_block_block_sections_mlid'] = $front_mlid;
      $new_row['delta']++;
      db_insert('field_data_field_basic_block_block_sections')
        ->fields($new_row)
        ->execute();
    }
  }


  $query = db_select('field_data_field_basic_slideshow_front', 'f')
    ->condition('field_basic_slideshow_front_value', '1')
    ->fields('f', array('entity_id'))
    ->execute();
  while ($entity_id = $query->fetchField()) {
    $front = db_select('field_data_field_basic_slideshow_assignment', 's1')
      ->condition('field_basic_slideshow_assignment_mlid', $front_mlid)
      ->condition('entity_id', $entity_id)
      ->fields('s1')
      ->execute()
      ->fetchAssoc();

    if (empty($front)) {
      $new_row = db_select('field_data_field_basic_slideshow_assignment', 's2')
        ->condition('entity_id', $entity_id)
        ->fields('s2')
        ->orderBy('delta', 'desc')
        ->execute()
        ->fetchAssoc();
      $new_row['field_basic_slideshow_assignment_mlid'] = $front_mlid;
      $new_row['delta']++;
      db_insert('field_data_field_basic_slideshow_assignment')
        ->fields($new_row)
        ->execute();
    }
  }


  $instance = field_info_instance('node', 'field_basic_individual_page', 'basic_block');
  field_delete_instance($instance, TRUE);
  $instance = field_info_instance('node', 'field_basic_block_region', 'basic_block');
  field_delete_instance($instance, TRUE);
  $instance = field_info_instance('node', 'field_basic_block_front_page', 'basic_block');
  field_delete_instance($instance, TRUE);
  $instance = field_info_instance('node', 'field_basic_slideshow_front', 'basic_slideshow');
  field_delete_instance($instance, TRUE);

  $features = array(
    'feature_basic_content' => array(
      'field_base',
      'field_instance',
      'variable',
    )
  );
  features_revert($features);

  module_enable(array('mbp_defaults'));

  $regions = array(
    'content',
    'sidebar_first',
    'sidebar_second',
    'preface_first',
    'postscript_first',
    'content',
    'sidebar_first',
    'sidebar_second',
    'preface_first',
    'postscript_first',

  );
  $query = db_select('draggableviews_structure', 'd')
    ->condition('view_name', 'basic_blocks_sort')
    ->fields('d')
    ->execute();
  while ($row = $query->fetchAssoc()) {
    $args = trim($row['args'], '[]');
    if ($args != '') {
      $args = array_reverse(explode(',', $args));
      $id = (int) substr($row['view_display'], 6);
      $args = '["' . $regions[$id] . '",' . implode(',', $args) . ']';
      $row['view_name'] = 'mbp_6';
      $row['view_display'] = 'block_1';
      $row['args'] = $args;
      db_update('draggableviews_structure')
        ->condition('dvid', $row['dvid'])
        ->fields($row)
        ->execute();
    }
  }
}